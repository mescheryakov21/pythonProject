"""
сортировку улучшить
проверить последний отсортированный с предшествующим
"""

"""
1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами
 на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком. 
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""

import random

def sort(array):
    '''
    модифицированная сортировка пузырьком, если перестановок не было за последующую итерацию,
     тогда сортировка окончена
    :param array: -  Принимает не отсортированный массив
    :return:  -  отсортированный массив
    '''
    n = 1
    while n < len(array):
        k = 0 # Cчетчик перестановок
        for i in range(len(array) - n):
            if array[i] < array[i + 1]:
                array[i + 1], array[i] = array[i], array[i + 1]
                k += 1
        n += 1
        if k == 0:
            break
    return array

size = 20
array_ramd = [random.randint(-100, 100) for i in range(size)]
print(array_ramd)
print(sort(array_ramd))




